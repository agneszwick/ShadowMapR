% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{create_building_shadow_map}
\alias{create_building_shadow_map}
\title{Main function to process buildings and create an interactive shadow map}
\usage{
create_building_shadow_map(buildings, time, batch_size = 50)
}
\arguments{
\item{buildings}{A simple features (sf) object containing building geometries, where:
- The `geometry` column contains the building footprints (as `sfc` objects).
- The `shadow_geometry` column contains the shadow geometries associated with each building.}

\item{time}{A POSIXct object representing the specific time at which the shadow calculation is to be
performed. This time is used to adjust the shadow angles and determine shadow positions.}

\item{batch_size}{An integer specifying the number of buildings to process in each batch. Default is 50.}
}
\value{
A `leaflet` map object that visualizes the building shadows and sunlight areas, allowing the user
  to interactively explore the shadows based on the provided time.
}
\description{
This function processes building geometries, calculates shadow polygons for each building,
and creates an interactive shadow map using the Leaflet package. The process involves calculating
the convex hulls of building footprints and their respective shadow geometries, then dissolving
the individual shadow polygons. Sunlight areas are then computed, and finally, the shadow map is
generated based on the given time.
}
\details{
The process is executed in batches to manage memory usage, and each stage of the process is timed
to provide performance feedback.


The function sequentially performs the following steps:
1. Processes building geometries.
2. Computes the convex hulls of the union of each building's footprint and shadow geometry.
3. Dissolves the individual shadow polygons to form a consolidated shadow area.
4. Creates sunlight areas based on the processed buildings and shadow geometries.
5. Generates an interactive Leaflet map displaying the calculated shadows and sunlight areas.

During each stage, the function logs the processing time for transparency and performance monitoring.
If any stage fails (e.g., no valid shadow polygons are created), an error is thrown with a descriptive message.
}
\examples{
# Example of using the create_building_shadow_map function
# Assuming 'buildings_sf' is an existing sf object containing building and shadow geometries
shadow_map <- create_building_shadow_map(buildings_sf, time = Sys.time())

# Display the shadow map
shadow_map
}
